{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GIfGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","Gif-Expert-App.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","CatAdd","type","value","onChange","target","getGifs","Category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GIfGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imge","GifExpertApp","categories","category","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAElBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKlB,SACI,uBACAO,KAAO,OACPC,MAAST,EACTU,SAnBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBDC,qBAAU,WAETxB,EAAQC,GAEHwB,MAAK,SAAAC,GAEFH,EAAS,CAELf,KAAKkB,EACLL,SAAQ,SAMlB,CAACpB,IAEIqB,EDpBiBK,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDhB,IACtDoB,GAAW,mBAAGJ,UAAU,mCAAb,0BACZ,qBAAKA,UAAU,YAAf,SAGQT,EAAKE,KAAI,SAAAkB,GAAI,OACb,cAAC,EAAD,eAEIA,GADEA,EAAKhB,aEiBhBiB,EA7BM,WAEjB,MAAoC1C,mBAAS,CAAC,iBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ4C,EAAWpB,KAAI,SAAAqB,GAAQ,OACnB,cAAC,EAAD,CAEA9B,SAAW8B,GADJA,YCnB/BC,IAASC,OACT,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b39d47dd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [InputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e)=>{\r\n\r\n        setInputValue(e.target.value);\r\n\r\n    };\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();//previene q de refresh a tod a la pagina\r\n        if (InputValue.trim().length>0){\r\n            setCategories((CatAdd)=>[InputValue, ...CatAdd]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit ={handleSubmit}>          \r\n            <input \r\n            type = \"text\"\r\n            value = {InputValue}\r\n            onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n};","export const getGifs = async(Category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(Category)}&limit=10&api_key=d6tSlPtE8aM9NvvuIZ5VNiMBjwoH0XtX`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    });\r\n\r\n    return gifs;    \r\n}","import React from 'react'\r\n\r\nexport const GIfGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className='card  animate__animated animate__fadeInDown'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GIfGridItem } from './GIfGridItem';\r\n\r\n\r\nexport const GifGrid = ({ Category }) => {\r\n\r\n    const {data, loading} = useFetchGifs(Category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeInDown'>{Category}</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Cargando....</p>}\r\n            <div className='card-grid'>\r\n            \r\n                {\r\n                    data.map(imge=>(\r\n                    <GIfGridItem \r\n                    key= {imge.id}\r\n                    {...imge}\r\n                    />   \r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = (Category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n   useEffect(()=>{\r\n\r\n    getGifs(Category)\r\n\r\n        .then(imgs=>{\r\n\r\n            setState({\r\n\r\n                data:imgs,\r\n                loading:false\r\n\r\n            });\r\n\r\n        });   \r\n\r\n    },[Category]) \r\n  \r\n    return state;//retorna {data:[],loading:true}\r\n}\r\n\r\n   ","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n    \r\n    const [categories, setCategories] = useState(['Ninja Scroll']);\r\n\r\n    // const handleAdd =()=>{\r\n    //     // setCategories((CatAdd)=>[...CatAdd, 'Naruto']);\r\n    //     setCategories(['Naruto',...categories]);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr></hr>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        <GifGrid \r\n                        key = {category}\r\n                        Category ={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n        )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './Gif-Expert-App'\n\n\nReactDOM.render(\n<GifExpertApp/>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}